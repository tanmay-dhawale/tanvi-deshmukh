{"ast":null,"code":"var _jsxFileName = \"D:\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\src\\\\components\\\\Main\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n// src/components/Main/index.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // Ensure axios is installed\n\nimport styles from \"./styles.module.css\";\nimport HelloWorldComponent from \"../HelloWorldComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [isHelloWorldOpen, setHelloWorldOpen] = useState(false);\n  const [hasPublishedSecret, setHasPublishedSecret] = useState(false);\n  const [secretInput, setSecretInput] = useState(\"\");\n  const [secrets, setSecrets] = useState([]); // State to store secrets from server\n  // In your Main component\n\n  useEffect(() => {\n    const fetchSecrets = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/secrets');\n        setSecrets(response.data);\n        const token = localStorage.getItem('token');\n\n        if (token) {\n          const decodedToken = jwt_decode(token);\n          const userEmail = decodedToken.email;\n        } // const userEmail = /* Get user's email from somewhere, e.g., JWT or context */;\n\n\n        setHasPublishedSecret(response.data.some(secret => secret.email === userEmail));\n      } catch (error) {// Handle error\n      }\n    };\n\n    fetchSecrets();\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  const handleHelloWorldTabClick = () => {\n    setHelloWorldOpen(!isHelloWorldOpen);\n  };\n\n  const handleSecretSubmit = async () => {\n    try {\n      await axios.post('http://localhost:5000/submit-secret', {\n        secretMessage: secretInput\n      });\n      setHasPublishedSecret(true);\n      fetchSecrets(); // Refresh the list of secrets\n    } catch (error) {// Handle error\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main_container,\n    children: isHelloWorldOpen && /*#__PURE__*/_jsxDEV(HelloWorldComponent, {\n      secrets: secrets,\n      onClose: () => setHelloWorldOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"Rq7pnd1ZOe1UNGyIciB3lNQpEjo=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/AuthInMern-Authentication-In-MERN/client/src/components/Main/index.jsx"],"names":["React","useState","useEffect","axios","styles","HelloWorldComponent","Main","isHelloWorldOpen","setHelloWorldOpen","hasPublishedSecret","setHasPublishedSecret","secretInput","setSecretInput","secrets","setSecrets","fetchSecrets","response","get","data","token","localStorage","getItem","decodedToken","jwt_decode","userEmail","email","some","secret","error","handleLogout","removeItem","window","location","reload","handleHelloWorldTabClick","handleSecretSubmit","post","secretMessage","main_container"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC,CAJiB,CAI2B;AAE5C;;AAEFC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,YAAY,GAAG,YAAY;AAC/B,UAAI;AACL,cAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,+BAAV,CAAvB;AACAH,QAAAA,UAAU,CAACE,QAAQ,CAACE,IAAV,CAAV;AACA,cAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACE,YAAIF,KAAJ,EAAW;AACV,gBAAMG,YAAY,GAAGC,UAAU,CAACJ,KAAD,CAA/B;AACA,gBAAMK,SAAS,GAAGF,YAAY,CAACG,KAA/B;AACF,SAPI,CAQL;;;AACAf,QAAAA,qBAAqB,CAACM,QAAQ,CAACE,IAAT,CAAcQ,IAAd,CAAmBC,MAAM,IAAIA,MAAM,CAACF,KAAP,KAAiBD,SAA9C,CAAD,CAArB;AACE,OAVD,CAUE,OAAOI,KAAP,EAAc,CACjB;AACE;AACF,KAdD;;AAgBAb,IAAAA,YAAY;AACV,GAlBM,EAkBJ,EAlBI,CAAT;;AAqBE,QAAMc,YAAY,GAAG,MAAM;AACzBT,IAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAHD;;AAKA,QAAMC,wBAAwB,GAAG,MAAM;AACrC1B,IAAAA,iBAAiB,CAAC,CAACD,gBAAF,CAAjB;AACD,GAFD;;AAIA,QAAM4B,kBAAkB,GAAG,YAAY;AACrC,QAAI;AACF,YAAMhC,KAAK,CAACiC,IAAN,CAAW,qCAAX,EAAkD;AAAEC,QAAAA,aAAa,EAAE1B;AAAjB,OAAlD,CAAN;AACAD,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAK,MAAAA,YAAY,GAHV,CAGc;AACjB,KAJD,CAIE,OAAOa,KAAP,EAAc,CACd;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACkC,cAAvB;AAAA,cAEG/B,gBAAgB,iBACf,QAAC,mBAAD;AAAqB,MAAA,OAAO,EAAEM,OAA9B;AAAuC,MAAA,OAAO,EAAE,MAAML,iBAAiB,CAAC,KAAD;AAAvE;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxDD;;GAAMF,I;;KAAAA,I;AA0DN,eAAeA,IAAf","sourcesContent":["// src/components/Main/index.jsx\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // Ensure axios is installed\nimport styles from \"./styles.module.css\";\nimport HelloWorldComponent from \"../HelloWorldComponent\";\n\nconst Main = () => {\n  const [isHelloWorldOpen, setHelloWorldOpen] = useState(false);\n  const [hasPublishedSecret, setHasPublishedSecret] = useState(false);\n  const [secretInput, setSecretInput] = useState(\"\");\n  const [secrets, setSecrets] = useState([]); // State to store secrets from server\n\n  // In your Main component\n\nuseEffect(() => {\n\tconst fetchSecrets = async () => {\n\t  try {\n\t\tconst response = await axios.get('http://localhost:5000/secrets');\n\t\tsetSecrets(response.data);\n\t\tconst token = localStorage.getItem('token');\n  \t\tif (token) {\n    \tconst decodedToken = jwt_decode(token);\n    \tconst userEmail = decodedToken.email;\n\t\t}\n\t\t// const userEmail = /* Get user's email from somewhere, e.g., JWT or context */;\n\t\tsetHasPublishedSecret(response.data.some(secret => secret.email === userEmail));\n\t  } catch (error) {\n\t\t// Handle error\n\t  }\n\t};\n  \n\tfetchSecrets();\n  }, []);\n  \n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  const handleHelloWorldTabClick = () => {\n    setHelloWorldOpen(!isHelloWorldOpen);\n  };\n\n  const handleSecretSubmit = async () => {\n    try {\n      await axios.post('http://localhost:5000/submit-secret', { secretMessage: secretInput });\n      setHasPublishedSecret(true);\n      fetchSecrets(); // Refresh the list of secrets\n    } catch (error) {\n      // Handle error\n    }\n  };\n\n  return (\n    <div className={styles.main_container}>\n      {/* ... Rest of your JSX ... */}\n      {isHelloWorldOpen && (\n        <HelloWorldComponent secrets={secrets} onClose={() => setHelloWorldOpen(false)} />\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}