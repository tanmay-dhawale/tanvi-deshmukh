{"ast":null,"code":"var _jsxFileName = \"D:\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\src\\\\components\\\\Singup\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SecretForm = () => {\n  _s();\n\n  const [secret, setSecret] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(''); // Reset message\n\n    try {\n      await axios.post('http://localhost:8080/signup', {\n        secretMessage: secret\n      });\n      setMessage(\"Secret submitted successfully!\");\n      setSecret(''); // Clear the field after successful submission\n    } catch (error) {\n      var _error$response;\n\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"An error occurred.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: secret,\n        onChange: e => setSecret(e.target.value),\n        placeholder: \"Share your secret\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SecretForm, \"5GM/tXArcJ27bsYCLwyauld5Phg=\");\n\n_c = SecretForm;\nexport default SecretForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecretForm\");","map":{"version":3,"sources":["D:/AuthInMern-Authentication-In-MERN/client/src/components/Singup/index.jsx"],"names":["React","useState","axios","SecretForm","secret","setSecret","message","setMessage","handleSubmit","e","preventDefault","post","secretMessage","error","response","data","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,UAAU,CAAC,EAAD,CAAV,CAF8B,CAEd;;AAChB,QAAI;AACA,YAAML,KAAK,CAACS,IAAN,CAAW,8BAAX,EAA2C;AAAEC,QAAAA,aAAa,EAAER;AAAjB,OAA3C,CAAN;AACAG,MAAAA,UAAU,CAAC,gCAAD,CAAV;AACAF,MAAAA,SAAS,CAAC,EAAD,CAAT,CAHA,CAGe;AAClB,KAJD,CAIE,OAAOQ,KAAP,EAAc;AAAA;;AACZN,MAAAA,UAAU,CAAC,oBAAAM,KAAK,CAACC,QAAN,oEAAgBC,IAAhB,KAAwB,oBAAzB,CAAV;AACH;AACJ,GAVD;;AAYA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEP,YAAhB;AAAA,8BACI;AACI,QAAA,KAAK,EAAEJ,MADX;AAEI,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,SAAS,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAF9B;AAGI,QAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASKX,OAAO,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAThB;AAAA,kBADJ;AAaH,CA7BD;;GAAMH,U;;KAAAA,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst SecretForm = () => {\n    const [secret, setSecret] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setMessage(''); // Reset message\n        try {\n            await axios.post('http://localhost:8080/signup', { secretMessage: secret });\n            setMessage(\"Secret submitted successfully!\");\n            setSecret(''); // Clear the field after successful submission\n        } catch (error) {\n            setMessage(error.response?.data || \"An error occurred.\");\n        }\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <textarea \n                    value={secret}\n                    onChange={(e) => setSecret(e.target.value)}\n                    placeholder=\"Share your secret\"\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n            {message && <div>{message}</div>}\n        </>\n    );\n};\n\nexport default SecretForm;\n"]},"metadata":{},"sourceType":"module"}