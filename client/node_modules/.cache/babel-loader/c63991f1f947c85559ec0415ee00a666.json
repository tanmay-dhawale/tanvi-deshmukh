{"ast":null,"code":"var _jsxFileName = \"D:\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\src\\\\components\\\\Main\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n// src/components/Main/index.jsx\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport HelloWorldComponent from \"../HelloWorldComponent\"; // Import the HelloWorldComponent\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [isHelloWorldOpen, setHelloWorldOpen] = useState(false);\n  const [hasPublishedSecret, setHasPublishedSecret] = useState(false);\n  const [secretInput, setSecretInput] = useState(\"\");\n  useEffect(() => {\n    // Check if the user has already published a secret\n    const userSecret = localStorage.getItem(\"userSecret\");\n\n    if (userSecret) {\n      setHasPublishedSecret(false);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  const handleHelloWorldTabClick = () => {\n    setHelloWorldOpen(!isHelloWorldOpen);\n  };\n\n  const handleSecretSubmit = () => {\n    // Store the secret in localStorage\n    localStorage.setItem(\"userSecret\", secretInput); // Update the state to indicate that the user has published a secret\n    //setHasPublishedSecret(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main_container,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SECRET.DO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.centered_content,\n      children: hasPublishedSecret ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.static_message,\n        children: \"You have already published a secret.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.static_message,\n          children: \"Discover and Share Secrets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.centered_buttons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.green_btn,\n            onClick: handleHelloWorldTabClick,\n            children: \"Publish Secret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.blue_btn,\n            onClick: handleHelloWorldTabClick,\n            children: \"Reveal Secrets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isHelloWorldOpen && !hasPublishedSecret && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form_modal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Publish Secret\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter your secret...\",\n        value: secretInput,\n        onChange: e => setSecretInput(e.target.value),\n        className: styles.secret_input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSecretSubmit,\n        className: styles.green_btn,\n        children: \"Submit Secret\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHelloWorldOpen(false),\n        className: styles.white_btn,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), isHelloWorldOpen && hasPublishedSecret && /*#__PURE__*/_jsxDEV(HelloWorldComponent, {\n      onClose: () => setHelloWorldOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"yKjz0WrWXeX58EBMCP2qlIDMeaQ=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/AuthInMern-Authentication-In-MERN/client/src/components/Main/index.jsx"],"names":["React","useState","useEffect","styles","HelloWorldComponent","Main","isHelloWorldOpen","setHelloWorldOpen","hasPublishedSecret","setHasPublishedSecret","secretInput","setSecretInput","userSecret","localStorage","getItem","handleLogout","removeItem","window","location","reload","handleHelloWorldTabClick","handleSecretSubmit","setItem","main_container","navbar","white_btn","centered_content","static_message","centered_buttons","green_btn","blue_btn","form_modal","e","target","value","secret_input"],"mappings":"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","sourcesContent":["// src/components/Main/index.jsx\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport HelloWorldComponent from \"../HelloWorldComponent\"; // Import the HelloWorldComponent\n\nconst Main = () => {\n  const [isHelloWorldOpen, setHelloWorldOpen] = useState(false);\n  const [hasPublishedSecret, setHasPublishedSecret] = useState(false);\n  const [secretInput, setSecretInput] = useState(\"\");\n  \n  useEffect(() => {\n    // Check if the user has already published a secret\n    const userSecret = localStorage.getItem(\"userSecret\");\n    if (userSecret) {\n      setHasPublishedSecret(false);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  const handleHelloWorldTabClick = () => {\n    setHelloWorldOpen(!isHelloWorldOpen);\n  };\n\n  const handleSecretSubmit = () => {\n    // Store the secret in localStorage\n    localStorage.setItem(\"userSecret\", secretInput);\n    // Update the state to indicate that the user has published a secret\n    //setHasPublishedSecret(true);\n  };\n\n  return (\n    <div className={styles.main_container}>\n      <nav className={styles.navbar}>\n        <h1>SECRET.DO</h1>\n        <button className={styles.white_btn} onClick={handleLogout}>\n          Logout\n        </button>\n      </nav>\n\n      <div className={styles.centered_content}>\n        {hasPublishedSecret ? (\n          <p className={styles.static_message}>You have already published a secret.</p>\n        ) : (\n          <>\n            <p className={styles.static_message}>Discover and Share Secrets</p>\n            <div className={styles.centered_buttons}>\n              <button className={styles.green_btn} onClick={handleHelloWorldTabClick}>\n                Publish Secret\n              </button>\n              <button className={styles.blue_btn} onClick={handleHelloWorldTabClick}>\n                Reveal Secrets\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n\n      {isHelloWorldOpen && !hasPublishedSecret && (\n        <div className={styles.form_modal}>\n          <h2>Publish Secret</h2>\n          <textarea\n            placeholder=\"Enter your secret...\"\n            value={secretInput}\n            onChange={(e) => setSecretInput(e.target.value)}\n            className={styles.secret_input}\n          ></textarea>\n          <button onClick={handleSecretSubmit} className={styles.green_btn}>\n            Submit Secret\n          </button>\n          <button onClick={() => setHelloWorldOpen(false)} className={styles.white_btn}>\n            Close\n          </button>\n        </div>\n      )}\n\n      {isHelloWorldOpen && hasPublishedSecret && (\n        <HelloWorldComponent onClose={() => setHelloWorldOpen(false)} />\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}