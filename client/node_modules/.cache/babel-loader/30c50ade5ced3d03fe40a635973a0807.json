{"ast":null,"code":"import _asyncToGenerator from\"D:\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"D:\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState}from'react';import axios from'axios';import styles from'./styles.module.css';import{jwtDecode}from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SecretForm=function SecretForm(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),secret=_useState2[0],setSecret=_useState2[1];// Decode the JWT to get the user's email\nvar token=localStorage.getItem('token');console.log(\"token: \"+token);var decoded=jwtDecode(token);var userEmail=decoded.email;var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var url,payload,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;// Define the URL for the POST request\nurl='http://localhost:8080/api/users/submit-secret';console.log(\"Email: \"+userEmail);payload={secretMessage:secret+\"$userEmail$\"+userEmail,userEmail:userEmail};// Make the POST request with the payload\n_context.next=7;return axios.post(url,payload);case 7:response=_context.sent;// Handle success\nconsole.log(response.data);setSecret('');_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);if(_context.t0.response&&_context.t0.response.status===404){console.error('Endpoint not found. Please check the server route.');}else{console.error('An error occurred:',_context.t0.message);}case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,12]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:styles.secretForm,children:[/*#__PURE__*/_jsx(\"textarea\",{className:styles.secretTextarea,value:secret,onChange:function onChange(e){return setSecret(e.target.value);},placeholder:\"Share your secret\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.submitButton,children:\"Submit\"})]});};export default SecretForm;","map":{"version":3,"sources":["D:/AuthInMern-Authentication-In-MERN/client/src/components/SecretForm/index.jsx"],"names":["React","useState","axios","styles","jwtDecode","SecretForm","secret","setSecret","token","localStorage","getItem","console","log","decoded","userEmail","email","handleSubmit","e","preventDefault","url","payload","secretMessage","post","response","data","status","error","message","secretForm","secretTextarea","target","value","submitButton"],"mappings":"6ZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,SAAT,KAA0B,YAA1B,C,wFACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,cAA4BJ,QAAQ,CAAC,EAAD,CAApC,wCAAOK,MAAP,eAAeC,SAAf,eAEA;AACA,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACAC,OAAO,CAACC,GAAR,CAAY,UAAYJ,KAAxB,EACA,GAAMK,CAAAA,OAAO,CAAGT,SAAS,CAACI,KAAD,CAAzB,CACA,GAAMM,CAAAA,SAAS,CAAGD,OAAO,CAACE,KAA1B,CACA,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,CAAP,2IACjBA,CAAC,CAACC,cAAF,GADiB,gBAGjB;AACMC,GAJW,CAIL,+CAJK,CAKbR,OAAO,CAACC,GAAR,CAAY,UAAYE,SAAxB,EACEM,OANW,CAMD,CAAEC,aAAa,CAAEf,MAAM,CAAG,aAAT,CAAwBQ,SAAzC,CAAoDA,SAAS,CAAEA,SAA/D,CANC,CAOhB;AAPgB,sBAQOZ,CAAAA,KAAK,CAACoB,IAAN,CAAWH,GAAX,CAAgBC,OAAhB,CARP,QAQVG,QARU,eAUrB;AACAZ,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACC,IAArB,EACAjB,SAAS,CAAC,EAAD,CAAT,CAZqB,iFAgBrB,GAAI,YAAMgB,QAAN,EAAkB,YAAMA,QAAN,CAAeE,MAAf,GAA0B,GAAhD,CAAqD,CACjDd,OAAO,CAACe,KAAR,CAAc,oDAAd,EACH,CAFD,IAEO,CACHf,OAAO,CAACe,KAAR,CAAc,oBAAd,CAAoC,YAAMC,OAA1C,EACH,CApBoB,qEAAH,kBAAZX,CAAAA,YAAY,4CAAlB,CAwBA,mBACI,cAAM,QAAQ,CAAEA,YAAhB,CAA8B,SAAS,CAAEb,MAAM,CAACyB,UAAhD,wBACI,iBACI,SAAS,CAAEzB,MAAM,CAAC0B,cADtB,CAEI,KAAK,CAAEvB,MAFX,CAGI,QAAQ,CAAE,kBAACW,CAAD,QAAOV,CAAAA,SAAS,CAACU,CAAC,CAACa,MAAF,CAASC,KAAV,CAAhB,EAHd,CAII,WAAW,CAAC,mBAJhB,EADJ,cAOI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAE5B,MAAM,CAAC6B,YAAxC,oBAPJ,GADJ,CAWH,CA3CD,CA6CA,cAAe3B,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './styles.module.css';\r\nimport { jwtDecode } from 'jwt-decode';\r\nconst SecretForm = () => {\r\n    const [secret, setSecret] = useState('');\r\n\r\n    // Decode the JWT to get the user's email\r\n    const token = localStorage.getItem('token');\r\n    console.log(\"token: \" + token);\r\n    const decoded = jwtDecode(token);\r\n    const userEmail = decoded.email;\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n        // Define the URL for the POST request\r\n        const url = 'http://localhost:8080/api/users/submit-secret';\r\n            console.log(\"Email: \" + userEmail);\r\n        const payload = { secretMessage: secret + \"$userEmail$\"+ userEmail, userEmail: userEmail };\r\n         // Make the POST request with the payload\r\n         const response = await axios.post(url, payload);\r\n    \r\n    // Handle success\r\n    console.log(response.data);\r\n    setSecret(''); \r\n\r\n    } catch (error) {\r\n    \r\n    if (error.response && error.response.status === 404) {\r\n        console.error('Endpoint not found. Please check the server route.');\r\n    } else {\r\n        console.error('An error occurred:', error.message);\r\n    }\r\n}\r\n};\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.secretForm}>\r\n            <textarea \r\n                className={styles.secretTextarea}\r\n                value={secret}\r\n                onChange={(e) => setSecret(e.target.value)}\r\n                placeholder=\"Share your secret\"\r\n            />\r\n            <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SecretForm;\r\n"]},"metadata":{},"sourceType":"module"}