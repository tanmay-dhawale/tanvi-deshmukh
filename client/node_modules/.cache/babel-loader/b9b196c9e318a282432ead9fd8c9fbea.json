{"ast":null,"code":"var _jsxFileName = \"D:\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\src\\\\components\\\\SecretForm\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './styles.module.css'; // Import the styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SecretForm = () => {\n  _s();\n\n  const [secret, setSecret] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // Define the URL for the POST request\n      const url = 'http://localhost:8080/submit-secret'; // Make the POST request with the secret message\n\n      const response = await axios.post(url, {\n        secretMessage: secret\n      }); // Handle success\n\n      console.log(response.data); // Or update the UI to indicate success\n      // Clear the secret message from the state\n\n      setSecret('');\n    } catch (error) {\n      // If the server responds with a 404, it could be a route issue\n      if (error.response && error.response.status === 404) {\n        console.error('Endpoint not found. Please check the server route.');\n      } else {\n        // Handle other errors\n        console.error('An error occurred:', error.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.secretForm,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: styles.secretTextarea,\n      value: secret,\n      onChange: e => setSecret(e.target.value),\n      placeholder: \"Share your secret\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles.submitButton,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SecretForm, \"eBSk5t6CrddWa7hDCK6HQ62mq3M=\");\n\n_c = SecretForm;\nexport default SecretForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecretForm\");","map":{"version":3,"sources":["D:/AuthInMern-Authentication-In-MERN/client/src/components/SecretForm/index.jsx"],"names":["React","useState","axios","styles","SecretForm","secret","setSecret","handleSubmit","e","preventDefault","url","response","post","secretMessage","console","log","data","error","status","message","secretForm","secretTextarea","target","value","submitButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAA0C;;;;AAE1C,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACJ;AACA,YAAMC,GAAG,GAAG,qCAAZ,CAFI,CAGJ;;AACJ,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAWF,GAAX,EAAgB;AAAEG,QAAAA,aAAa,EAAER;AAAjB,OAAhB,CAAvB,CAJQ,CAMR;;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAArB,EAPQ,CAOoB;AAE5B;;AACAV,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH,KAXO,CAWN,OAAOW,KAAP,EAAc;AACZ;AACA,UAAIA,KAAK,CAACN,QAAN,IAAkBM,KAAK,CAACN,QAAN,CAAeO,MAAf,KAA0B,GAAhD,EAAqD;AACjDJ,QAAAA,OAAO,CAACG,KAAR,CAAc,oDAAd;AACH,OAFD,MAEO;AACH;AACAH,QAAAA,OAAO,CAACG,KAAR,CAAc,oBAAd,EAAoCA,KAAK,CAACE,OAA1C;AACH;AACJ;AACA,GAtBG;;AAwBA,sBACI;AAAM,IAAA,QAAQ,EAAEZ,YAAhB;AAA8B,IAAA,SAAS,EAAEJ,MAAM,CAACiB,UAAhD;AAAA,4BACI;AACI,MAAA,SAAS,EAAEjB,MAAM,CAACkB,cADtB;AAEI,MAAA,KAAK,EAAEhB,MAFX;AAGI,MAAA,QAAQ,EAAGG,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACc,MAAF,CAASC,KAAV,CAH9B;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEpB,MAAM,CAACqB,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAtCD;;GAAMpB,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './styles.module.css'; // Import the styles\r\n\r\nconst SecretForm = () => {\r\n    const [secret, setSecret] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n        // Define the URL for the POST request\r\n        const url = 'http://localhost:8080/submit-secret';\r\n        // Make the POST request with the secret message\r\n    const response = await axios.post(url, { secretMessage: secret });\r\n    \r\n    // Handle success\r\n    console.log(response.data); // Or update the UI to indicate success\r\n    \r\n    // Clear the secret message from the state\r\n    setSecret('');\r\n} catch (error) {\r\n    // If the server responds with a 404, it could be a route issue\r\n    if (error.response && error.response.status === 404) {\r\n        console.error('Endpoint not found. Please check the server route.');\r\n    } else {\r\n        // Handle other errors\r\n        console.error('An error occurred:', error.message);\r\n    }\r\n}\r\n};\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.secretForm}>\r\n            <textarea \r\n                className={styles.secretTextarea}\r\n                value={secret}\r\n                onChange={(e) => setSecret(e.target.value)}\r\n                placeholder=\"Share your secret\"\r\n            />\r\n            <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SecretForm;\r\n"]},"metadata":{},"sourceType":"module"}