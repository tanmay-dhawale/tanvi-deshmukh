{"ast":null,"code":"var _jsxFileName = \"D:\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\src\\\\components\\\\SecretForm\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './styles.module.css'; // Import the styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SecretForm = () => {\n  _s();\n\n  const [secret, setSecret] = useState('');\n  const [data, setData] = useState({\n    email: \"\",\n    secret: \"\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const url = \"http://localhost:8080/submit-secret\";\n      const {\n        data: res\n      } = await axios.post(url, data); //await axios.post('http://localhost:8080/submit-secret', { secretMessage: secret });\n      // Handle success (e.g., showing a success message)\n    } catch (error) {// Handle error (e.g., showing an error message)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.secretForm,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: styles.secretTextarea,\n      value: secret,\n      onChange: e => setSecret(e.target.value),\n      placeholder: \"Share your secret\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles.submitButton,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SecretForm, \"hbuHAUFKJ9emsfdM7Uk/b5iCgMs=\");\n\n_c = SecretForm;\nexport default SecretForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecretForm\");","map":{"version":3,"sources":["D:/AuthInMern-Authentication-In-MERN/client/src/components/SecretForm/index.jsx"],"names":["React","useState","axios","styles","SecretForm","secret","setSecret","data","setData","email","handleSubmit","e","preventDefault","url","res","post","error","secretForm","secretTextarea","target","value","submitButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAA0C;;;;AAE1C,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AACnCQ,IAAAA,KAAK,EAAE,EAD4B;AAEnCJ,IAAAA,MAAM,EAAE;AAF2B,GAAD,CAAhC;;AAIA,QAAMK,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,YAAMC,GAAG,GAAG,qCAAZ;AACT,YAAM;AAAEN,QAAAA,IAAI,EAAEO;AAAR,UAAgB,MAAMZ,KAAK,CAACa,IAAN,CAAWF,GAAX,EAAgBN,IAAhB,CAA5B,CAFS,CAGA;AACA;AACH,KALD,CAKE,OAAOS,KAAP,EAAc,CACZ;AACH;AACJ,GAVD;;AAYA,sBACI;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAA8B,IAAA,SAAS,EAAEP,MAAM,CAACc,UAAhD;AAAA,4BACI;AACI,MAAA,SAAS,EAAEd,MAAM,CAACe,cADtB;AAEI,MAAA,KAAK,EAAEb,MAFX;AAGI,MAAA,QAAQ,EAAGM,CAAD,IAAOL,SAAS,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV,CAH9B;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEjB,MAAM,CAACkB,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7BD;;GAAMjB,U;;KAAAA,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './styles.module.css'; // Import the styles\r\n\r\nconst SecretForm = () => {\r\n    const [secret, setSecret] = useState('');\r\n    const [data, setData] = useState({\r\n\t\temail: \"\",\r\n\t\tsecret: \"\",\r\n\t});\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const url = \"http://localhost:8080/submit-secret\";\r\n\t\t\tconst { data: res } = await axios.post(url, data);\r\n            //await axios.post('http://localhost:8080/submit-secret', { secretMessage: secret });\r\n            // Handle success (e.g., showing a success message)\r\n        } catch (error) {\r\n            // Handle error (e.g., showing an error message)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.secretForm}>\r\n            <textarea \r\n                className={styles.secretTextarea}\r\n                value={secret}\r\n                onChange={(e) => setSecret(e.target.value)}\r\n                placeholder=\"Share your secret\"\r\n            />\r\n            <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SecretForm;\r\n"]},"metadata":{},"sourceType":"module"}