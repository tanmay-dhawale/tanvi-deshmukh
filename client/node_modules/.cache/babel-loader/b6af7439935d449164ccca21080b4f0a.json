{"ast":null,"code":"var _jsxFileName = \"D:\\\\AuthInMern-Authentication-In-MERN\\\\client\\\\src\\\\components\\\\SecretForm\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './styles.module.css'; // Import the styles\n\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SecretForm = () => {\n  _s();\n\n  const [secret, setSecret] = useState(''); // Decode the JWT to get the user's email\n\n  const token = localStorage.getItem('token');\n  console.log(token);\n  const decoded = jwtDecode(token);\n  const userEmail = decoded.email;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // Define the URL for the POST request\n      const url = 'http://localhost:8080/api/users/submit-secret';\n      console.log(\"Email: \" + userEmail);\n      const payload = {\n        secretMessage: secret + \"$userEmail$\" + userEmail,\n        userEmail: userEmail\n      }; // Make the POST request with the payload\n\n      const response = await axios.post(url, payload); // Handle success\n\n      console.log(response.data); // Log the server's success message\n\n      setSecret(''); // Clear the secret message from the state\n    } catch (error) {\n      // If the server responds with a 404, it could be a route issue\n      if (error.response && error.response.status === 404) {\n        console.error('Endpoint not found. Please check the server route.');\n      } else {\n        // Handle other errors\n        console.error('An error occurred:', error.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.secretForm,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: styles.secretTextarea,\n      value: secret,\n      onChange: e => setSecret(e.target.value),\n      placeholder: \"Share your secret\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles.submitButton,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SecretForm, \"eBSk5t6CrddWa7hDCK6HQ62mq3M=\");\n\n_c = SecretForm;\nexport default SecretForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecretForm\");","map":{"version":3,"sources":["D:/AuthInMern-Authentication-In-MERN/client/src/components/SecretForm/index.jsx"],"names":["React","useState","axios","styles","jwtDecode","SecretForm","secret","setSecret","token","localStorage","getItem","console","log","decoded","userEmail","email","handleSubmit","e","preventDefault","url","payload","secretMessage","response","post","data","error","status","message","secretForm","secretTextarea","target","value","submitButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAA0C;;AAC1C,SAASC,SAAT,QAA0B,YAA1B;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CADqB,CAGrB;;AACA,QAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAMK,OAAO,GAAGT,SAAS,CAACI,KAAD,CAAzB;AACA,QAAMM,SAAS,GAAGD,OAAO,CAACE,KAA1B;;AACA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACJ;AACA,YAAMC,GAAG,GAAG,+CAAZ;AACIR,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYE,SAAxB;AACJ,YAAMM,OAAO,GAAG;AAAEC,QAAAA,aAAa,EAAEf,MAAM,GAAG,aAAT,GAAwBQ,SAAzC;AAAoDA,QAAAA,SAAS,EAAEA;AAA/D,OAAhB,CAJI,CAKH;;AACA,YAAMQ,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAWJ,GAAX,EAAgBC,OAAhB,CAAvB,CANG,CAQR;;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAQ,CAACE,IAArB,EATQ,CASoB;;AAC5BjB,MAAAA,SAAS,CAAC,EAAD,CAAT,CAVQ,CAUO;AAEd,KAZG,CAYF,OAAOkB,KAAP,EAAc;AAChB;AACA,UAAIA,KAAK,CAACH,QAAN,IAAkBG,KAAK,CAACH,QAAN,CAAeI,MAAf,KAA0B,GAAhD,EAAqD;AACjDf,QAAAA,OAAO,CAACc,KAAR,CAAc,oDAAd;AACH,OAFD,MAEO;AACH;AACAd,QAAAA,OAAO,CAACc,KAAR,CAAc,oBAAd,EAAoCA,KAAK,CAACE,OAA1C;AACH;AACJ;AACA,GAvBG;;AAyBA,sBACI;AAAM,IAAA,QAAQ,EAAEX,YAAhB;AAA8B,IAAA,SAAS,EAAEb,MAAM,CAACyB,UAAhD;AAAA,4BACI;AACI,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,cADtB;AAEI,MAAA,KAAK,EAAEvB,MAFX;AAGI,MAAA,QAAQ,EAAGW,CAAD,IAAOV,SAAS,CAACU,CAAC,CAACa,MAAF,CAASC,KAAV,CAH9B;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAE5B,MAAM,CAAC6B,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA5CD;;GAAM3B,U;;KAAAA,U;AA8CN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './styles.module.css'; // Import the styles\r\nimport { jwtDecode } from 'jwt-decode';\r\nconst SecretForm = () => {\r\n    const [secret, setSecret] = useState('');\r\n\r\n    // Decode the JWT to get the user's email\r\n    const token = localStorage.getItem('token');\r\n    console.log(token);\r\n    const decoded = jwtDecode(token);\r\n    const userEmail = decoded.email;\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n        // Define the URL for the POST request\r\n        const url = 'http://localhost:8080/api/users/submit-secret';\r\n            console.log(\"Email: \" + userEmail);\r\n        const payload = { secretMessage: secret + \"$userEmail$\"+ userEmail, userEmail: userEmail };\r\n         // Make the POST request with the payload\r\n         const response = await axios.post(url, payload);\r\n    \r\n    // Handle success\r\n    console.log(response.data); // Log the server's success message\r\n    setSecret(''); // Clear the secret message from the state\r\n\r\n    } catch (error) {\r\n    // If the server responds with a 404, it could be a route issue\r\n    if (error.response && error.response.status === 404) {\r\n        console.error('Endpoint not found. Please check the server route.');\r\n    } else {\r\n        // Handle other errors\r\n        console.error('An error occurred:', error.message);\r\n    }\r\n}\r\n};\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.secretForm}>\r\n            <textarea \r\n                className={styles.secretTextarea}\r\n                value={secret}\r\n                onChange={(e) => setSecret(e.target.value)}\r\n                placeholder=\"Share your secret\"\r\n            />\r\n            <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SecretForm;\r\n"]},"metadata":{},"sourceType":"module"}